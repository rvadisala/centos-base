Vagrant Image -- Centos Latest
$ cat /etc/redhat-release 
CentOS Linux release 7.7.1908 (Core)

========================

Steps for OS build:

# Create a folder for our new root structure in vagrant image of Centos latest
$ export centos_root='/centos_image/rootfs'
$ mkdir -p $centos_root

# initialize rpm database
$ rpm --root $centos_root --initdb

# download and install the centos-release package, it contains our repository sources
$ sudo  yum install yum-utils -y
$ yumdownloader centos-release
$ rpm --root $centos_root -ivh centos-release*.rpm
$ rpm --root $centos_root --import  $centos_root/etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

# install yum without docs and install only the english language files during the process
$ yum -y --installroot=$centos_root --setopt=tsflags='nodocs' --setopt=override_install_langs=en_US.utf8 install yum

# configure yum to avoid installing of docs and other language files than english generally
$ sed -i "/distroverpkg=centos-release/a override_install_langs=en_US.utf8\ntsflags=nodocs" $centos_root/etc/yum.conf

# adding public dns entries for name resolution
$ echo "nameserver 4.2.2.2" >> /etc/resolv.conf 
$ echo "nameserver 8.8.8.8" >> /etc/resolv.conf 

# chroot to the environment and install some additional tools like yum-ovl
$ cp /etc/resolv.conf $centos_root/etc
$ chroot $centos_root /bin/bash <<EOF
yum install -y procps-ng iputils yum-ovl
yum clean all
EOF

#############################################################################

# install and enable docker to build the custom image
$ yum install -y docker
$ systemctl start docker
$ systemctl enable docker

# create docker image using the rootfs create above
$ tar -C $centos_root -c . | docker import - centos

$ docker images

# run docker image for testing
$ docker run --rm centos cat /etc/redhat-release
CentOS Linux release 7.2.1511 (Core)

